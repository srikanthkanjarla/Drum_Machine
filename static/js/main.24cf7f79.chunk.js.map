{"version":3,"sources":["components/DisplayScreen.js","components/DrumKitControls.js","components/DrumPadKey.js","components/DrumKitKeyPad.js","drumKitTracks.js","components/App.js","index.js"],"names":["Display","props","value","react_default","a","createElement","className","DrumKitControls","power","volume","soundBank","handlePower","handleSelect","handleVolume","type","concat","onClick","lib_default","name","size","onChange","disabled","id","min","max","DrumPadKey","label","style","disable","handleClick","KeyPad","activeKey","map","key","src_components_DrumPadKey","tracks","piano","title","src","s","d","f","g","h","j","k","l","heater","App","audioRef","React","createRef","_useState","useState","_useState2","Object","slicedToArray","setPower","_useState3","_useState4","setActiveKey","_useState5","_useState6","setSoundBank","_useState7","_useState8","setVolume","_useState9","_useState10","displayMessage","setDisplayMessage","drumPadKeys","handlePlaySound","_ref","asyncToGenerator","regenerator_default","mark","_callee","message","url","wrap","_context","prev","next","current","drumKitSounds","play","t0","stop","_x","apply","this","arguments","useEffect","document","onkeydown","event","toLowerCase","includes","onkeyup","components_DisplayScreen","src_components_DrumKitControls","target","components_DrumKitKeyPad","controls","ref","ReactDOM","render","src_components_App","getElementById"],"mappings":"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","file":"static/js/main.24cf7f79.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './DisplayScreen.scss';\n\nconst Display = props => {\n  const { value } = props;\n  return (\n    <div className=\"display\">\n      <p>{value}</p>\n    </div>\n  );\n};\n\nDisplay.propTypes = {\n  value: PropTypes.string.isRequired,\n};\n\nexport default Display;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport FontAwesome from 'react-fontawesome';\nimport './DrumKitControls.scss';\n\nconst DrumKitControls = props => {\n  const { power, volume, soundBank, handlePower, handleSelect, handleVolume } = props;\n\n  return (\n    <div className=\"controls-wrapper\">\n      <div className=\"control-row\">\n        <div className=\"control-col-1\">\n          <button type=\"button\" className={`power-btn ${power ? 'active' : ''}`} onClick={() => handlePower(!power)}>\n            <FontAwesome name=\"power-off\" size=\"2x\" className=\"power-icon fa-fw\" />\n          </button>\n        </div>\n        <div className=\"control-col-2 select-kit\">\n          <select value={soundBank} onChange={handleSelect} disabled={!power}>\n            <option value=\"piano\">Piano</option>\n            <option value=\"heater\">Heater</option>\n          </select>\n        </div>\n        <div className=\"control-col-3\">\n          <button type=\"button\" className=\"volume-btn\">\n            <span>\n              <FontAwesome\n                size=\"2x\"\n                name={`${volume < 0.4 ? 'volume-down' : 'volume-up'}`}\n                className=\"volume-icon fa-fw\"\n              />\n              <input\n                type=\"range\"\n                id=\"volume\"\n                name=\"volume\"\n                min=\"0\"\n                max=\"10\"\n                value={volume * 10}\n                onChange={handleVolume}\n                disabled={!power}\n              />\n            </span>\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nDrumKitControls.propTypes = {\n  power: PropTypes.bool.isRequired,\n  volume: PropTypes.number.isRequired,\n  soundBank: PropTypes.string.isRequired,\n  handlePower: PropTypes.func.isRequired,\n  handleSelect: PropTypes.func.isRequired,\n  handleVolume: PropTypes.func.isRequired,\n};\n\nexport default DrumKitControls;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './DrumPadKey.scss';\n\nconst DrumPadKey = props => {\n  const { label, style, disable, handleClick } = props;\n  return <input type=\"button\" value={label} disabled={disable} className={`btn ${style}`} onClick={handleClick} />;\n};\n\nDrumPadKey.propTypes = {\n  label: PropTypes.string.isRequired,\n  style: PropTypes.string.isRequired,\n  disable: PropTypes.bool.isRequired,\n  handleClick: PropTypes.func.isRequired,\n};\nexport default DrumPadKey;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport DrumPadKey from './DrumPadKey';\nimport './DrumKitKeyPad.scss';\n\nconst KeyPad = props => {\n  const drumPadKeys = ['a', 's', 'd', 'f', 'g', 'h', 'j', 'k', 'l'];\n  const { handleClick, activeKey, power } = props;\n\n  return (\n    <div className=\"drumkit-key-pad\">\n      {drumPadKeys.map(key => {\n        return (\n          <DrumPadKey\n            label={key}\n            key={key}\n            handleClick={handleClick}\n            style={`${key === activeKey ? 'active-key' : ''}`}\n            disable={!power}\n          />\n        );\n      })}\n    </div>\n  );\n};\n\nKeyPad.propTypes = {\n  activeKey: PropTypes.string.isRequired,\n  power: PropTypes.bool.isRequired,\n  handleClick: PropTypes.func.isRequired,\n};\nexport default KeyPad;\n","const tracks = {\n  piano: {\n    a: {\n      title: 'Heater-1',\n      src: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-1.mp3',\n    },\n    s: {\n      title: 'Heater-2',\n      src: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-2.mp3',\n    },\n    d: {\n      title: 'Heater-3',\n      src: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-3.mp3',\n    },\n    f: {\n      title: 'Heater-4',\n      src: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-4_1.mp3',\n    },\n    g: {\n      title: 'Clap',\n      src: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-6.mp3',\n    },\n    h: {\n      title: 'Open-hh',\n      src: 'https://s3.amazonaws.com/freecodecamp/drums/Dsc_Oh.mp3',\n    },\n    j: {\n      title: 'Kick-n-Hat',\n      src: 'https://s3.amazonaws.com/freecodecamp/drums/Kick_n_Hat.mp3',\n    },\n    k: {\n      title: 'Kick',\n      src: 'https://s3.amazonaws.com/freecodecamp/drums/RP4_KICK_1.mp3',\n    },\n    l: {\n      title: 'Closed-hh',\n      src: 'https://s3.amazonaws.com/freecodecamp/drums/Cev_H2.mp3',\n    },\n  },\n  heater: {\n    a: {\n      title: 'Chord-1',\n      src: 'https://s3.amazonaws.com/freecodecamp/drums/Chord_1.mp3',\n    },\n    s: {\n      title: 'Chord-2',\n      src: 'https://s3.amazonaws.com/freecodecamp/drums/Chord_2.mp3',\n    },\n    d: {\n      title: 'Chore-3',\n      src: 'https://s3.amazonaws.com/freecodecamp/drums/Chord_3.mp3',\n    },\n    f: {\n      title: 'Give us a Light',\n      src: 'https://s3.amazonaws.com/freecodecamp/drums/Give_us_a_light.mp3',\n    },\n    g: {\n      title: 'Open-hh',\n      src: 'https://s3.amazonaws.com/freecodecamp/drums/Dry_Ohh.mp3',\n    },\n    h: {\n      title: 'Closed-hh',\n      src: 'https://s3.amazonaws.com/freecodecamp/drums/Bld_H1.mp3',\n    },\n    j: {\n      title: 'Punchy-Kick',\n      src: 'https://s3.amazonaws.com/freecodecamp/drums/punchy_kick_1.mp3',\n    },\n    k: {\n      title: 'Side-Stick',\n      src: 'https://s3.amazonaws.com/freecodecamp/drums/side_stick_1.mp3',\n    },\n    l: {\n      title: 'Snare',\n      src: 'https://s3.amazonaws.com/freecodecamp/drums/Brk_Snr.mp3',\n    },\n  },\n};\n\nexport default tracks;\n","/* eslint-disable jsx-a11y/media-has-caption */\nimport React, { useState, useEffect } from 'react';\nimport Display from './DisplayScreen';\nimport DrumKitControls from './DrumKitControls';\nimport DrumKitKeyPad from './DrumKitKeyPad';\nimport drumKitSounds from '../drumKitTracks';\nimport './App.scss';\n\nconst App = () => {\n  const audioRef = React.createRef();\n  const [power, setPower] = useState(false);\n  const [activeKey, setActiveKey] = useState('');\n  const [soundBank, setSoundBank] = useState('piano');\n  const [volume, setVolume] = useState(0.7);\n  const [displayMessage, setDisplayMessage] = useState('');\n  const drumPadKeys = ['a', 's', 'd', 'f', 'g', 'h', 'j', 'k', 'l'];\n\n  // set power ON/OFF\n  const handlePower = () => {\n    setPower(!power);\n    setDisplayMessage(power ? '' : 'Welcome');\n  };\n\n  // select sound bank\n  const handleSoundBank = event => {\n    if (power) {\n      const { value } = event.target;\n      setSoundBank(value);\n      setDisplayMessage(value);\n    }\n  };\n\n  // update volume level\n  const handleVolume = event => {\n    const { value } = event.target;\n    setVolume(value / 10);\n    setDisplayMessage(`Volume ${value * 10}%`);\n  };\n\n  // play sound\n  const handlePlaySound = async key => {\n    if (power && audioRef.current) {\n      const message = drumKitSounds[soundBank][key].title;\n      const url = drumKitSounds[soundBank][key].src;\n\n      try {\n        audioRef.current.volume = volume;\n        audioRef.current.src = url;\n        await audioRef.current.play();\n        setDisplayMessage(message);\n      } catch (err) {\n        setDisplayMessage('Error: Try again..!');\n      }\n    }\n  };\n\n  // handle click\n  const handleClick = event => {\n    if (power) {\n      const { value } = event.target;\n      handlePlaySound(value);\n    }\n  };\n\n  // handle keypress and play sound and set active key to apply active style\n  useEffect(() => {\n    if (power) {\n      document.onkeydown = event => {\n        const key = event.key.toLowerCase();\n        if (drumPadKeys.includes(key)) {\n          handlePlaySound(key);\n          setActiveKey(key);\n        }\n      };\n      // unset activekey on keyup to remove active style on key\n      document.onkeyup = event => {\n        const key = event.key.toLowerCase();\n        if (drumPadKeys.includes(key)) {\n          setActiveKey('');\n        }\n      };\n    }\n  });\n\n  return (\n    <div className=\"app\">\n      <h1>Drum Machine</h1>\n      <div className=\"container\">\n        <Display value={displayMessage} />\n        <DrumKitControls\n          power={power}\n          volume={volume}\n          soundBank={soundBank}\n          handleVolume={handleVolume}\n          handlePower={handlePower}\n          handleSelect={handleSoundBank}\n        />\n        <DrumKitKeyPad power={power} activeKey={activeKey} handleClick={handleClick} />\n      </div>\n      <audio controls src=\"\" ref={audioRef} className=\"audio-track\">\n        Your browser does not support the audio element.\n      </audio>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}